# -*- mode: ruby -*-
# vi: set ft=ruby :

# Will ensure that python is installed so that ansible can provision the servers
$install_pyton = <<SCRIPT
if [ "$[$(date +%s) - $(stat -c %Z /var/cache/apt/)]" -ge 6000000 ]; then
	echo "apt cache is older than 1 hr, updating"
	apt-get update
fi
if [ ! -f /usr/bin/python ]; then
	echo "Installing python for ansible"
	apt-get install -q -y python
fi
SCRIPT

VAGRANTFILE_API_VERSION = "2"

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|

    config.vm.box = "debian_squeeze_6_0_3"
    config.vm.box_url = "http://tools.silverstripe.com/vagrant/squeeze.box"
    # A apt-get cache plugin for vagrant can be installed via http://fgrehm.viewdocs.io/vagrant-cachier

    config.vm.provider "virtualbox" do |v|
		v.memory = 512
		v.cpus = 1
    end
    
    config.vm.define "deploynaut" do |deploynaut|
        deploynaut.vm.hostname = "deploynaut"
        deploynaut.vm.network "private_network", ip: "10.0.1.2"
        deploynaut.vm.network "forwarded_port", guest: 80, host: 8080
        deploynaut.vm.network "forwarded_port", guest: 5678, host: 5678
		deploynaut.vm.synced_folder "../", "/sites/mysite/www", owner: "www-data", group: "www-data"
    end

    config.vm.define "uat" do |uat|
        uat.vm.hostname = "uat"
        uat.vm.network "private_network", ip: "10.0.1.3"
        uat.vm.network "forwarded_port", guest: 80, host: 8081
    end

    config.vm.define "prod" do |prod|
        prod.vm.hostname = "prod"
        prod.vm.network "private_network", ip: "10.0.1.4"
        prod.vm.network "forwarded_port", guest: 80, host: 8082
    end

	config.vm.provision "shell", inline: $install_pyton
    config.vm.provision "ansible" do | ansible |
        ansible.playbook = "ansible.yml"
		ansible.groups = {
			"deploy" => ["deploynaut"],
			"web" => ["uat", "prod"],
			"all_groups:children" => ["deploy", "uat", "prod"]
			}
    end
end
